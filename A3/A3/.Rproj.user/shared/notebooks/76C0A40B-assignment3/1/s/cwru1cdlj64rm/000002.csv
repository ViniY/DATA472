"0","#options(error = recover)"
"0","summarise_vehicles <- function(vehicle_df, region, type, max_axles, earliest_year = min(vehicles$VEHICLE_YEAR))"
"0","{"
"0","    # Ensure that the ""dplyr"" package is loaded."
"0","    require(dplyr)"
"0","  "
"0","    # Check to see if the supplied data frame has variables with names matching those to be used in the function"
"0","    if(!all(c(""TLA"", ""VEHICLE_TYPE"", ""NUMBER_OF_AXLES"", ""VEHICLE_YEAR"", ""BASIC_COLOUR"", ""BODY_TYPE"", ""MODEL"", ""MAKE"", ""CC_RATING"", ""GROSS_VEHICLE_MASS"") %in% names(vehicle_df)))"
"0","    "
"0","      stop(""The supplied data frame does not contain all variables required for this function to execute correctly."")"
"0","  "
"0","    # Check to see if the values for ""region"" and ""type"" are valid geographic regions and vehicle types"
"0","    if(!(region %in% unique(vehicle_df$TLA)))"
"0","        stop(paste(region, ""is not in the list of TLAs (regions) in the dataset.""))"
"0","    if(!(type %in% unique(vehicle_df$VEHICLE_TYPE)))"
"0","        stop(paste(type, ""is not in the list of vehicle types in the dataset.""))"
"0","    "
"0","    # Restrict to vehicles from the specified region, of the specified vehicle type, with no more axles than the specified maximum number of axles, and for years starting in the earliest specified year.  Add a new variable that records the decade corresponding to the entry."
"0","    vehicles_sub <- filter(vehicle_df, TLA == region, VEHICLE_TYPE == type, NUMBER_OF_AXLES <= max_axles, NUMBER_OF_CYLINDERS > 3, VEHICLE_YEAR >= earliest_year) %>% mutate(VEHICLE_DECADE = floor(VEHICLE_YEAR / 10) * 10)"
"0","    "
"0","    # Restrict to only vehicles that have positive gross vehicle mass."
"0","    vehicles_sub <- filter(vehicles_sub, GROSS_VEHICLE_MASS < 0)"
"0","    "
"0","    # Group by make and decade, sorting by vehicle decade, and only include car colour, body type, model, make, decade CC rating, and gross vehicle mass."
"0","    vehicles_sub <- group_by(vehicles_sub, MAKE, VEHICLE_DECADE) %>% arrange(VEHICLE_DECADE) %>% select(BASIC_COLOUR, BODY_type, MODEL, MAKE, VEHICLE_DECADE, CC_RATING, GROSS_VEHICLE_MASS)"
"0","    "
"0","    result <- summarise(vehicles_sub, N = n(), Mean_CC_Rating = mean(CC_RATING))"
"0","    "
"0","    filter(result, N > 10)                     "
"0","}"
"0","vehicles <- as_tibble(read.csv(""Motor_Vehicles.csv""))"
"0","summarise_vehicles(vehicles, ""AUCKLAND"", ""GOODS VAN/TRUCK/UTILITY"", 4, 2000) "
"2","Error: Problem with `filter()` input `..4`.
[31mx[39m object 'NUMBER_OF_CYLINDERS' not found
[34mâ„¹[39m Input `..4` is `NUMBER_OF_CYLINDERS > 3`.
[90mRun `rlang::last_error()` to see where the error occurred.[39m
"
